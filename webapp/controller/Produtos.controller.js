sap.ui.define([
		"sap/ui/core/mvc/Controller",
		"sap/ui/model/Filter",
		"sap/ui/model/FilterOperator"
	],
	function (Controller, Filter, FilterOperator) {
		"use strict";
		return Controller.extend("br.com.infoprodutos.Produtos.controller.Produtos", {
			/**
			 * Called when a controller is instantiated and its View controls (if available) are already created.
			 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
			 * @memberOf br.com.infoprodutos.Produtos.view.Produtos
			 */
			onInit: function () {},
			funcListItemPress: function (evt) {
					var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
					//acessa o router
					var selectedIdProd = evt.getSource().getBindingContext().getProperty("ProductID");
					//acesso o contexto de selecao
					oRouter.navTo("Detalhes", {
						///acessa o router detalhes
						idProd: selectedIdProd
					});
				}
				/**
				 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
				 * (NOT before the first rendering! onInit() is used for that one!).
				 * @memberOf br.com.infoprodutos.Produtos.view.Produtos
				 */
				//	onBeforeRendering: function() {
				//
				//	},
				/**
				 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
				 * This hook is the same one that SAPUI5 controls get after being rendered.
				 * @memberOf br.com.infoprodutos.Produtos.view.Produtos
				 */
				//	onAfterRendering: function() {
				//
				//	},
				/**
				 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
				 * @memberOf br.com.infoprodutos.Produtos.view.Produtos
				 */
				//	onExit: function() {
				//
				//	}
				,
			/**
			 *@memberOf br.com.infoprodutos.Produtos.controller.Produtos
			 */
			onFilter: function (oEvent) {
				var query = oEvent.getSource().getValue(); //recebe o valor digitado na caixa de texto
				var oFilter = [];

				oFilter.push(new Filter("ProductName", FilterOperator.Contains, query));

				var oTable = this.getView().byId("tbProdutos");
				var binding = oTable.getBinding("items");

				binding.filter(oFilter); // momemtno que Ã© executado o filtro.

				//This code was generated by the layout editor.
			}
			
			
		});
		
	});
	
	
	